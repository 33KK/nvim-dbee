name: Documentation Generation

on: [push, pull_request]

jobs:
  check-markdown-format:
    runs-on: ubuntu-20.04
    name: Check Markdown Format
    steps:
      - uses: actions/checkout@v3
      - name: Python Setup
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
      - name: Install mdformat
        run: |
          pip install mdformat-gfm
      - name: Markdown Style Check
        run: |
          mdformat --number --wrap 80 --check README.md ARCHITECTURE.md

  generate-docs:
    runs-on: ubuntu-20.04
    name: Generate Documentation
    needs: check-markdown-format
    steps:
      - uses: actions/checkout@v3
      - name: Install md2vim
        run: |
          curl -L -o md2vim.tar.gz https://github.com/FooSoft/md2vim/releases/download/21.12.14.0/md2vim_linux_amd64.tar.gz
          tar -xzvf md2vim.tar.gz
      - name: Generate Vim Help from Markdown
        run: |
          TEMP_CONFIG="$(mktemp)"
          TEMP_README="$(mktemp)"
          # Retrieve default config and put it in a temp file
          {
            echo '```lua'
            awk '/DOCGEN_END/{f=0} f; /DOCGEN_START/{f=1}' lua/dbee/config.lua
            echo '```'
          } > "$TEMP_CONFIG"
          # Insert the default config between DOCGEN_CONFIG tags in the README
          {
            sed -e '
              /DOCGEN_CONFIG_START/,/DOCGEN_CONFIG_END/!b
              /DOCGEN_CONFIG_START/r '"$TEMP_CONFIG"'
              /DOCGEN_CONFIG_END:/!d
            ' <(sed '0,/DOCGEN_START/d' README.md)
            cat ARCHITECTURE.md
          } > "$TEMP_README"
          # Generate docs
          ./md2vim -desc "Database Client for NeoVim" "$TEMP_README" doc/dbee.txt
      - name: Commit the Generated Help
        uses: EndBug/add-and-commit@v9
        with:
          add: doc/dbee.txt
          author_name: Github Actions
          author_email: actions@github.com
          message: "[docgen] Update doc/dbee.txt"
          pull: --rebase --autostash
